7 Projet : Système de Contrôle de Température
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Dans ce projet, nous allons démontrer comment utiliser un capteur de température et d'humidité, un ventilateur et un écran LCD1602 pour constituer un système intelligent de contrôle de température et d'humidité.

Le système mesure la température et l'humidité ambiantes et contrôle le ventilateur pour refroidir au besoin. Lorsque la température dépasse le seuil fixé, le ventilateur s'allume automatiquement pour réduire la température ambiante en dessous de la valeur définie. Pendant ce temps, les valeurs actuelles de température et d'humidité seront affichées sur l'écran LCD1602.

Ainsi, il réalise un ajustement automatique de la température et de l'humidité ambiantes, ce qui est parfait pour les projets nécessitant ces fonctions.

.. image:: ./scratch_img/cout7.png
   :alt: img

--------------



7.1 Diagramme de Flux
^^^^^^^^^^^^^^^^^^^^^

.. image:: ./scratch_img/image-20230607121651834.png
   :alt: image-20230607121651834

--------------



7.2 Capteur de Température et d'Humidité
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Description :**

Le capteur de température et d'humidité DHT11 émet des signaux numériques. Il applique des principes d'acquisition et de conversion de signaux analogiques ainsi que des technologies de détection de température et d'humidité, ce qui lui confère une stabilité à long terme et une grande fiabilité. De plus, le capteur intègre un capteur d'humidité résistif de haute précision et un capteur de température thermosensible résistif, et est connecté à un MCU haute performance de 8 bits.

.. image:: ./scratch_img/cou71.png
   :alt: img

--------------

**Moyens de Communication DHT11 :**

Le DHT11 communique via un monobus (un seul bus) qui échange et contrôle les données.

-  Le monobus transmet **le Bit de Données** :

   -  Format de données du monobus : transmettre 40 bits de données à chaque fois, en commençant par le bit de poids fort.
   -  8 bits de valeur entière d'humidité + 8 bits de valeur décimale d'humidité + 8 bits de valeur entière de température + 8 bits de valeur décimale de température + 8 bits de parité.
   -  **REMARQUE : La valeur décimale d'humidité est égale à 0.**

-  **Bit de Parité** :

   -  8 bits de valeur entière d'humidité + 8 bits de valeur décimale d'humidité + 8 bits de valeur entière de température + 8 bits de valeur décimale de température.
   -  8 bits de parité égale aux 8 derniers bits du résultat.

**Diagramme de Timing :**

.. image:: ./scratch_img/cou73.png
   :alt: img

\**REMARQUE : \*\*

**L'hôte lit toujours les valeurs de température et d'humidité de la dernière mesure du DHT11. Par conséquent, si l'intervalle entre deux mesures est long, veuillez détecter consécutivement deux fois et adopter le deuxième résultat.**

Pour plus de détails, veuillez visiter le site officiel d'ASAIR :
http://www.aosong.com/products-21.html

--------------

**Schéma de Câblage :**

**Connectez le capteur de température et d'humidité à io17.**

**Attention : Connectez le jaune à S (Signal), le rouge à V (Alimentation), et le noir à GND. Ne les inversez pas !**

.. image:: ./scratch_img/couj71.png
   :alt: img

--------------

**Code de Test :**

-  Initialisez le port série et le capteur.

   .. image:: ./scratch_img/st89.png
      :alt: img

-  Le moniteur série imprime et actualise les valeurs d'humidité et de température par seconde.

   .. image:: ./scratch_img/st90.png
      :alt: img

Code complet :

.. image:: ./scratch_img/st91.png
   :alt: img

**Résultat du Test :**

.. image:: ./scratch_img/cou71-1.png
   :alt: img

Ouvrez le moniteur série, et vous verrez la valeur actuelle de température et d'humidité.

.. image:: ./scratch_img/st88.png
   :alt: img

--------------



7.3 Module LCD 1602
^^^^^^^^^^^^^^^^^^^^

**Description :**

Le LCD 1602 possède une interface standard de 14 broches (sans rétroéclairage) ou 16 broches (avec rétroéclairage), économisant les broches du MCU. Son circuit intégré d'affichage permet de réaliser un contrôle I2C.

.. image:: ./scratch_img/cou72.png
   :alt: img

--------------

**Communication Série I2C :**

La communication I2C, connue sous le nom complet de Circuit Inter-Intégré (IIC) ou Interface à Deux Fils (TWI), est un protocole de communication à double bus (un hôte et un esclave) couramment utilisé, développé par Phillips Semiconductor (acheté par NXP Semiconductors aux États-Unis).

Le plus grand avantage est que seulement deux fils suffisent pour réaliser la transmission des données, ce qui simplifie considérablement les circuits. Au total, le bus I2C peut connecter 127 nœuds en parallèle, ce qui prend en charge plusieurs hôtes et esclaves.

En général, l'alimentation externe n'est pas nécessaire pour les esclaves, car le bus I2C leur transmettra l'énergie :

.. image:: ./scratch_img/cou75.png
   :alt: img

Le bus I2C transmet des données via une transmission de données de 8 bits. En général, une donnée d'un octet est composée de neuf signaux d'horloge, dont huit transmettent des données et le dernier marque la fin de la transmission.

De plus, le bus I2C prend en charge la transmission de données multi-octets en répétant continuellement le processus ci-dessus.

Le protocole I2C se compose essentiellement de :

-  **Signal de Démarrage** : Avant la transmission, l'expéditeur transmet un signal de démarrage pour informer le récepteur du point de départ.
-  **Adresse** : Cela notifie le récepteur à qui les données sont envoyées.
-  **Données** : Elles sont transmises un octet à la fois et bit par bit.
-  **Signal de Fin** : Lorsqu'il termine la transmission, l'expéditeur termine les données par un signal de fin pour informer le récepteur que le processus est terminé.

**Diagramme de Timing du Protocole Série :**

Pour plus de détails, veuillez visiter le site officiel :
https://www.nxp.com/

.. image:: ./scratch_img/cou76.png
   :alt: img

.. image:: ./scratch_img/cou77.png
   :alt: img

Nous vous fournissons un fichier de bibliothèque **Wire.h** sur Arduino pour le protocole I2C, dans lequel les fonctions peuvent être directement appelées pour communiquer avec les dispositifs I2C/TWI.

Pour les détails de la bibliothèque, veuillez vous référer à :

https://www.arduino.cc/reference/en/language/functions/communication/wire/

--------------

**Schéma de Câblage :**

**Connectez le LCD au BUS I2C comme montré ci-dessous.**

**Attention : Connectez le jaune à S (Signal), le rouge à V (Alimentation), et le noir à GND. Ne les inversez pas !**

.. image:: ./scratch_img/couj72.png
   :alt: img

--------------

**Code de Test :**

-  Initialisez l'adresse I2C du LCD et activez son rétroéclairage.

   .. image:: ./scratch_img/st92.png
      :alt: img

-  Définissez la position du curseur du LCD sur les axes X et Y (l'axe X affiche un maximum de 16 caractères, et l'axe Y affiche un maximum de 2 colonnes).

   .. image:: ./scratch_img/st93.png
      :alt: img

-  Saisissez le contenu à imprimer (Pas plus de 16 caractères, sinon cela ne sera pas complet).

   .. image:: ./scratch_img/st94.png
      :alt: img

Code complet :

.. image:: ./scratch_img/st95.png
   :alt: img

**Résultat du Test :**

Le LCD1602 allume son rétroéclairage et affiche ”\ **HELLO WORLD 0**\ “ et ”\ **HELLO WORLD 1**\ “.

.. image:: ./scratch_img/cou78.png
   :alt: img

--------------



7.4 Module Ventilateur
^^^^^^^^^^^^^^^^^^^^^^

**Description :**

Le moteur 130 peut ajuster la vitesse via PWM. Dans le processus, deux broches doivent être connectées pour le contrôle.

Le module est adapté à de multiples applications, telles que la dissipation de chaleur des ordinateurs et la production industrielle. De plus, il est compact et facile à installer, ce qui est très pratique.

.. image:: ./scratch_img/cou710.png
   :alt: img

--------------

**Diagramme Schématique :**

.. image:: ./scratch_img/cou712.png
   :alt: img

--------------

**Schéma de Câblage :**

**Connectez le moteur à io18 et io19.**

**Attention : Connectez le jaune à S (Signal), le rouge à V (Alimentation), et le noir à GND. Ne les inversez pas !**

.. image:: ./scratch_img/couj73.png
   :alt: img

--------------

**Code de Test :**

-  Définissez la broche du ventilateur **INA**

   .. image:: ./scratch_img/st96.png
      :alt: img

-  Définissez l'état du niveau de puissance de **INA**, qui détermine la direction de rotation du ventilateur.

   .. image:: ./scratch_img/st97.png
      :alt: img

-  Définissez la broche du ventilateur **INB**.

   .. image:: ./scratch_img/st98.png
      :alt: img

-  Définissez la sortie analogique à **INB**, qui détermine la vitesse de rotation.

   -  Lorsque INA est à haut, plus la sortie analogique à INB est basse, plus le ventilateur tournera vite.

   -  Lorsque INA est à bas, plus la sortie analogique à INB est élevée, plus le ventilateur tournera vite.

      .. image:: ./scratch_img/st99.png
         :alt: img

**Résultat du Test :**

Le moteur 130 tourne alternativement à gauche et à droite toutes les 2 secondes.

.. image:: ./scratch_img/cou79.png
   :alt: img

\**REMARQUE : \*\*

**Des arrêts intermittents existent lors du changement de direction de rotation. Ils empêchent un courant excessif au moment du renversement. Sinon, un réinitialisation forcée peut se produire en raison d'une alimentation insuffisante sur la carte de développement.**

--------------



7.5 Système de Contrôle de Température
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Description :**

Ici, nous lisons la valeur du capteur de température et d'humidité DHT11 via la communication monobus, et les valeurs seront affichées sur le LCD. Si les valeurs dépassent le seuil fixé, le ventilateur s'allumera pour déshumidifier et refroidir afin de protéger les animaux et les plantes de la ferme. Remarquablement, ce système est facile à installer avec de multiples fonctions, telles que le contrôle de la vitesse via PWM et la transmission de données par monobus.

Dans l'ensemble, c'est un système pratique qui aide les agriculteurs à surveiller et contrôler l'état en temps réel pour améliorer l'efficacité de la production.

--------------

**Schéma de Câblage :**

-  **Connectez le capteur de température et d'humidité à io17.**
-  **Connectez le module moteur (ventilateur) à io18 et io19.**
-  **Connectez le LCD1602 au BUS I2C.**

**Attention : Connectez le jaune à S (Signal), le rouge à V (Alimentation), et le noir à GND. Ne les inversez pas !**

.. image:: ./scratch_img/couj74.png
   :alt: img

--------------

**Code de Test :**

Flux de Code :

.. image:: ./scratch_img/flo7.png
   :alt: img

Code :

-  Initialisez le LCD pour définir une adresse, et effacez l'affichage. Activez son rétroéclairage et définissez la position du curseur :

   .. image:: ./scratch_img/st100.png
      :alt: img

-  Initialisez le capteur DHT11 et choisissez une broche correspondante. Définissez deux variables comme valeurs de température et d'humidité.

   .. image:: ./scratch_img/st101.png
      :alt: img

-  Dans la boucle, assignez respectivement les valeurs détectées aux deux variables.

   .. image:: ./scratch_img/st102.png
      :alt: img

-  Affichez les valeurs sur le LCD.

   .. image:: ./scratch_img/st103.png
      :alt: img

-  Déterminez la valeur de température et d'humidité. Si la température est supérieure à 29° ou si l'humidité dépasse 80, le ventilateur tournera.

   .. image:: ./scratch_img/st104.png
      :alt: img

Code complet :

.. image:: ./scratch_img/st105.png
   :alt: img

**Résultat du Test :**

Lorsque la température atteint 29°C, le ventilateur s'allume pour dissiper la chaleur. Lorsqu'elle est inférieure à 29°C, le ventilateur s'éteint (le ventilateur simule simplement la dissipation de chaleur, donc l'effet n'est pas bon), ce qui permet d'économiser de l'énergie pour la ferme.

--------------



7.6 FAQ
^^^^^^^^^

#Q : Le capteur de température et d'humidité est-il étanche ?

R : Non. Il détecte la température et l'humidité ambiantes (dans l'air), donc ne le mettez pas dans l'eau.

--------------

#Q : La carte ESP32 se réinitialise lorsque le ventilateur tourne.

R : Lorsque le ventilateur tourne, plus de courant est requis que pour d'autres capteurs, donc la tension et le courant peuvent fluctuer dans le circuit. Surtout au moment du renversement du ventilateur, les fluctuations peuvent être trop importantes, entraînant une réinitialisation en raison d'une tension et d'un courant extrêmement bas sur la carte de développement ESP32.

